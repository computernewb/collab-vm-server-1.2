name: CollabVM Server

on: [push, pull_request]

jobs:
  windows_x64: # Windows Server 2019 (x64)
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - name: Install CLANG64 Env
        id: depends
        shell: bash
        run: | 
          mkdir build
          C:\msys64\usr\bin\pacman -S mingw-w64-clang-x86_64-cmake mingw-w64-clang-x86_64-clang --noconfirm
      - name: Build
        id: build
        shell: bash
        run: |
          echo "PATH=$PATH:C:\msys64\clang64\bin" >> $GITHUB_ENV
          export CC=C:\msys64\clang64\bin\clang.exe
          export CXX=C:\msys64\clang64\bin\clang++.exe
          C:\msys64\clang64\bin\cmake -B build -G"MSYS Makefiles" -DCMAKE_TOOLCHAIN_FILE=C:\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake -DCMAKE_BUILD_TYPE=Release
          cd build
          cmake --build .
          
  ubuntu_x64: # Latest version of Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with: 
          submodules: true
      - name: Install Dependencies
        id: depends
        run: | 
          mkdir build
          sudo apt install -y libvncserver-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libspdlog-dev libfmt-dev cmake ninja-build
      - name: Install latest LLVM/Clang
        id: llvm
        run: |
          # We need the latest version of Clang to build the server.
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 13
      - name: Build
        id: build
        run: |
          # Use clang instead of GCC
          export CC=/usr/bin/clang-13
          export CXX=/usr/bin/clang++-13
          cmake -B build -GNinja -DCMAKE_BUILD_TYPE=Release
          cd build
          cmake --build .
          
  #publish: # Publish the artifacts
  #  name: Publish for ${{ matrix.os }}
  #  runs-on: ${{ matrix.os }}
  #  strategy: 
  #    matrix: 
  #      include:
  #        - os: ubuntu-latest
  #          artifact_name: collab-vm-server
  #          asset_name: collab-vm-server-linux-amd64
  #        - os: windows-2019
  #          artifact_name: collab-vm-server.exe
  #          asset_name: collab-vm-server-windows-amd64.exe  
  #  steps:
  #    - name: Upload binaries for release
  #      uses: svenstaro/upload-release-action@v2
  #      with:
  #        repo_token: ${{ secrets.GITHUB_TOKEN }}
  #        file: build/${{ matrix.artificat_name }}
  #        asset_name: $${ matrix.asset_name }}
  #        tag: ${{ github.ref }}
