name: CollabVM Server

on: [push, pull_request]

jobs:
  # windows_x64_vcpkg:
    # runs-on: windows-2019
    # steps:
      # - uses: actions/checkout@main
      # - name: FIXME
        # id: warning
        # shell: bash
        # run: |
          # echo "The vcpkg workflow is disabled due to packaging issues"
          # echo "example: boost on win64 from vcpkg is msvc-intristic"
       
  windows_x64_msys2: # Windows Server 2019 (x64)
    runs-on: windows-2019
    strategy:
      matrix:
        set: [{"base": "ucrt", "compiler": "gcc", "xxcompiler": "g++"},{"base": "clang", "compiler": "clang", "xxcompiler": "clang++"}]
    steps:
      - uses: actions/checkout@main
      - name: Install ${{matrix.set.base}}64 Env and Dependencies
        id: depends
        shell: C:\\msys64\\usr\\bin\\env.exe -i /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        run: | 
          pacman -S mingw-w64-${{matrix.set.base}}-x86_64-cmake mingw-w64-${{matrix.set.base}}-x86_64-${{matrix.set.compiler}} mingw-w64-${{matrix.set.base}}-x86_64-make mingw-w64-${{matrix.set.base}}-x86_64-boost mingw-w64-${{matrix.set.base}}-x86_64-fmt mingw-w64-${{matrix.set.base}}-x86_64-spdlog --noconfirm
      - name: Setup build directory
        id: setup
        shell: C:\\msys64\\usr\\bin\\env.exe -i /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          PATH=/c/msys64/${{matrix.set.base}}64/bin:/c/msys64/mingw64/bin:$PATH
          export CC=/c/msys64/${{matrix.set.base}}64/bin/${{matrix.set.compiler}}
          export CXX=/c/msys64/${{matrix.set.base}}64/bin/${{matrix.set.xxcompiler}}
          cmake -B build -G"MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_MAKE_PROGRAM="mingw32-make" -DCMAKE_C_FLAGS="-DBOOST_ASIO_HAS_STD_INVOKE_RESULT" -DCMAKE_CXX_FLAGS="-DBOOST_ASIO_HAS_STD_INVOKE_RESULT"
      - name: Build server
        id: build
        shell: C:\\msys64\\usr\\bin\\env.exe -i /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          PATH=/c/msys64/${{matrix.set.base}}64/bin:/c/msys64/mingw64/bin:$PATH
          export CC=/c/msys64/${{matrix.set.base}}64/bin/${{matrix.set.compiler}}
          export CXX=/c/msys64/${{matrix.set.base}}64/bin/${{matrix.set.xxcompiler}}
          cd build
          cmake --build .
          
  ubuntu_x64: # Latest version of Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with: 
          submodules: true
      - name: Install Dependencies
        id: depends
        run: | 
          mkdir build
          sudo apt install -y libvncserver-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libspdlog-dev libfmt-dev cmake ninja-build
      - name: Install latest LLVM/Clang
        id: llvm
        run: |
          # We need the latest version of Clang to build the server.
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 13
      - name: Build
        id: build
        run: |
          # Use clang instead of GCC
          export CC=/usr/bin/clang-13
          export CXX=/usr/bin/clang++-13
          cmake -B build -GNinja -DCMAKE_BUILD_TYPE=Release
          cd build
          cmake --build .
          
  #publish: # Publish the artifacts
  #  name: Publish for ${{ matrix.os }}
  #  runs-on: ${{ matrix.os }}
  #  strategy: 
  #    matrix: 
  #      include:
  #        - os: ubuntu-latest
  #          artifact_name: collab-vm-server
  #          asset_name: collab-vm-server-linux-amd64
  #        - os: windows-2019
  #          artifact_name: collab-vm-server.exe
  #          asset_name: collab-vm-server-windows-amd64.exe  
  #  steps:
  #    - name: Upload binaries for release
  #      uses: svenstaro/upload-release-action@v2
  #      with:
  #        repo_token: ${{ secrets.GITHUB_TOKEN }}
  #        file: build/${{ matrix.artifact_name }}
  #        asset_name: $${ matrix.asset_name }}
  #        tag: ${{ github.ref }}
